{% for component in components %}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: "{{ app }}"
    run: "{{ app }}-{{ component.name }}"
    environment: "{{ environment }}"
{%- for label, value in component.get('labels', {}).items() %}
    {{ label }}: "{{ value }}"
{%- endfor %}
  name: "{{ app }}-{{ component.name }}"
spec:
  replicas: {{ component.get('replicas', {}).get(environment, defaults.replicas) }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: "{{ app }}"
      run: "{{ app }}-{{ component.name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: "{{ app }}"
        run: "{{ app }}-{{ component.name }}"
{%- for label, value in component.get('labels', {}).items() %}
        {{ label }}: "{{ value }}"
{%- endfor %}
    spec:
      containers:
        - image: postgres:10.7
          name: "{{ app }}-{{ component.name }}"
{%- if environment != 'dev' %}
          resources: {{ component.get('resources', {}).get(environment, component.get('resources', {}).get('default', defaults.get('resources', {}))) }}
{%- endif %}
          ports:
          - containerPort:  5432
            name:  postgres
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: data
          env:
          - name: GIT_HASH
            value: "{{ git_sha }}"
          - name: ENVIRONMENT
            value: {{ environment }}
          envFrom:
          - configMapRef:
              name: "{{ app }}-{{ component.name }}-env"
          - secretRef:
              name: "{{ app }}-{{ component.name }}-env"
      volumes:
{%- if environment != 'dev' %}
{%- if environment == 'production' %}
      - name: data
        persistentVolumeClaim:
          claimName: "postgresdata-claim"
{%- else %}
      - name: data
        persistentVolumeClaim:
          claimName: "{{ app }}-{{ component.name }}"
{%- endif %}
{%- else %}
      - name: data
        hostPath:
          path: "/data/{{ app }}-{{ component.name }}"
          type: DirectoryOrCreate
{%- endif %}
{% endfor %}
